1. 하나의 클래스로 여러 객체를 생성할 수 있다.
 
 ex) class Ch11prac {
 		int num;
 		String solv;
 		}
 
 	Ch11prac.Q1 = new Ch11prac();
 	Ch11prac.Q2 = new Ch11prac();
 	Ch11prac.Q3 = new Ch11prac();
 	

2. 클래스의 구성 멤버
	필드(Field), 생성자(Constructor), 메소드(Method)
	생략되거나 복수 개 작성 가능
	
	필드 	: 객체의 데이터를 저장, 클래스 중괄호{} 블록 어디서든 존재할 수 있다.
		  	  생성자 선언과 메소드 선언의 앞과 뒤 어떤 곳에서도 선언이 가능하다.
		  	  
	생성자 	: 객체의 초기화를 담당, 생성자를 실행시키지 않고는 객체를 만들 수 없다.
			  생성자는 다른 생성자를 호출하기 위해 this()를 사용할 수 있다.
			  생성자가 선언되지 않으면 컴파일러가 기본 생성자를 추가한다.
			  외부에서 객체를 생성할 수 없도록 생성자에게 private 접근 제한자를 붙일 수 있다
		
	메소드 	: 객체의 동작 부분으로, 실행 코드를 가지고 있는 블록
			  리턴값이 없는 메소드는 리터 타입을 void로 해야한다.
			  리턴 타입이 있는 메소든 리턴값을 지정하기 위해 반드시 return문이 있어야 한다.
			  매개값의 수를 모를 경우 "..."를 이용해서 매개 변수를 선언할 수 있다.
			  메소드 오버로딩으로 클래스 내에 같은 이름의 메소드를 여러 개 선언 할 수 있다.
			  
	
	메소드 오버로딩 : 동일한 이름의 메소드를 여러 개 선언하는 것을 말한다.
				   매개 변수의 타입, 개수, 순서를 다르게 선언해야 한다.(리턴 타입은 무관)
				   매개값의 타입 및 수에 따라 호출될 메소드가 선택된다.
				   
				   
				   
	class Member{
		String name;
		String id;
		String password;
		int age;
		}
		
	Member (String name, String id){ 	//생성자
		this.name = name;
		this.id = id
		} 
		
------------------------------------------
	
	class MemberService{
		String name;
		String id;
		String password;
		int age;
		}
		boolean login(String id, String password){
			if(hong, 12345)}
			
	